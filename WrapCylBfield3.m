%% Wrap Function to convert axial-symmetric field in 3D coordinates
 % ---------------------------------------------------------------------
 % This function allows the computation of the 3D field coordinates of the
 % magnetic flux density of an axially symmetric solenoid (or equivalently
 % of an axially magnetized permanent magnet). Being the model in closed
 % form just for the radial and axial components, this function allows the 
 % conversion of these coordinates in cartesian ones for EVERY point in
 % space and EVERY orientation of the permanent magnet.
 %
 % The function calls "AxialCylModelDerby.m", that is, the function 
 % computing the radial and axial coordinates of the field with respect to 
 % a local reference frame centered on the center of the solenoid (magnet).
 % Please refer to Derby 2009 for the detailed derivation of the model.
 %
 % Inputs:
 %    1) D      : diameter of the magnet                          [number]
 %    2) L      : length of the magnet                            [number] 
 %    3) M      : magnetization of the magnet                     [number]
 %    4) MagPos : the first three elements are the cartesian coordinates 
 %                of the center of the magnet, while the the latter three
 %                express the pose of the magnet, magnetic moment
 %                expressed as a unit vector                      [6x1]
 %    5) Point  : cartesian coordinates of the point feeling the field 
 %                generated by the magnet                         [3x1]
 %
 % Outputs:
 %    1) Bx   : x-component of the magnetic field                 [number]
 %    2) By   : y-component of the magnetic field                 [number]
 %    3) Bz   : z-component of the magnetic field                 [number]
 %  
 % ATTENTION: the code consider every input vector as a column vector!
 % ---------------------------------------------------------------------
 % August 28th, 2019                            Author: Federico Masiero
 % ---------------------------------------------------------------------
 %
 %                                          Last check: October 6th, 2019

function [Bx, By, Bz] = WrapCylBfield3(D,L,M,MagPos,Point)

[Brho,BZ] = AxialCylModelDerby(D,L,M,MagPos,Point);

x = Point-MagPos(1:3);                       % distance vector

if norm(cross(MagPos(4:6),x)) ~= 0
    % x and mag moment not aligned
    axialV  = (x'*MagPos(4:6))*MagPos(4:6);  % axial versor Local Frame
    radialV = (x-axialV)/norm(x-axialV);     % radial versor Local Frame
else
    % x and mag moment not aligned
    radialV = [0;0;0];                       % if aligned no radial comp.
end

% Radial and axial component of the field w.r.t. local reference frame
B_radial = radialV*Brho;
B_axial  = MagPos(4:6)*BZ;

% Projection back to Cartesian
Bx = B_radial'*[1 0 0]'+B_axial'*[1 0 0]';
By = B_radial'*[0 1 0]'+B_axial'*[0 1 0]';
Bz = B_radial'*[0 0 1]'+B_axial'*[0 0 1]';